COMPILER Calc0_F
//#domain
public static class Utils 
{
   public static void print(String text)
   {
      try
      {
         Main.OUT.write(text.getBytes());
      }
      catch(java.io.IOException e) {}
   }

   public static void println(String text)
   {
      print(text + '\n');
   }
}
//#enddomain

CHARACTERS  
  letter = 'A'..'Z'+'a'..'z'.
  digit = '0'..'9'.
  cr  = '\r'.  lf  = '\n'.  tab = '\t'.
TOKENS
  ident  = letter {letter | digit}.
  number = digit {digit}.
IGNORE cr + lf + tab
PRODUCTIONS
Calc0_F =
   VarDecl
   StatSeq 
.
VarDecl =  
   "var" Ident  (. Utils.println("variable "+t.val); .)
   { ',' Ident	(. Utils.println("variable "+t.val); .)         
   }
.
StatSeq =  Stat  { Stat } 
.
Stat        			(. String e,v; .) = 
   "print" Ident       	(. Utils.println(t.val+" @ .");   .)      
   | Ident             	(. v = t.val;    		.)
     "=" Expr<out e>   	(. Utils.println(e + " "+v+" !"); .)
.
Expr<out String e>   = (. String e1,e2,op; e="";.)
   Term<out e1>        (. e = e1;            	.)
   {
   AddOp<out op> Term<out e2>(. e += (" "+e2 +" "+op);  .)
   }
.
Term<out String e>    =         (. String e1,e2,op; .)
   Factor<out e1>               (. e = e1;          .)
   {MulOp<out op> Factor<out e2>(. e += (" "+e2+" "+op);    .)
   }
.
Factor<out String e>    (. e="";             .)
   =
   Ident 				(. e = t.val+" @";   .)
   | number     		(. e = t.val;        .)
   | '(' Expr<out e> ')'
.
AddOp<out String e>(. e="";            .) =
   ('+' | '-' )    (. e = t.val;       .)
.
MulOp<out String e>(. e="";                .) =
   '*'             (. e = t.val;           .)
   | "/"           (. e = " /";         .)
.
Ident = ident
.
END Calc0_F.











